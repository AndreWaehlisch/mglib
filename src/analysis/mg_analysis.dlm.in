MODULE        mg_analysis
DESCRIPTION   Tools for analysis
VERSION       ${VERSION}
SOURCE        mgalloy
BUILD_DATE    ${mglib_BUILD_DATE}


#+
# Allows checking for two arrays for equality or being within a tolerance.
#
# :Returns:
#   1 if equal, 0 if not
#
# :Params:
#   array1 : in, required, type=array
#     first array to compare
#   array2 : in, required, type=array
#     second array to compare
#
# :Keywords:
#   tolerance : in, optional, type=numeric
#     tolerance to allow array elements to differ by
#   no_typeconv : in, optional, type=boolean
#     if set, immediately fail if types aren't the same
#-
FUNCTION MG_ARRAY_EQUAL      2 2 KEYWORDS


#+
# Uses the Kahan summation algorithm::
#
#   http://en.wikipedia.org/wiki/Kahan_summation_algorithm
#
# :Returns:
#   total of elements of array
#
# :Params:
#   array : in, required, type=array
#     array to sum
#-
FUNCTION MG_TOTAL            1 1

#+
# Does multiple matrix-vector multiplications.
#
# :Returns:
#   matrix-vector products, `arr(m, n_multiples)`
#
# :Params:
#   a : in, required, type="arr(n, m, n_multiples)"
#     matrices
#   b : in, required, type="arr(n, n_multiples)"
#     vectors
#   n : in, required, type=long
#     number of columns in one matrix of `a`
#   m : in, required, type=long
#     number of rows in one matrix of `a`
#   n_multiples : in, required, type=long
#     number of matrix-vector products to compute
#-
FUNCTION MG_BATCHED_MATRIX_VECTOR_MULTIPLY 5 5
